<html DIR="LTR" xmlns:tool="http://www.microsoft.com/tooltip" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>Usar múltiples conjuntos de resultados</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/script.js">
      
    </script><script src="../local/script_main.js">&amp;nbsp;</script>
  </head>
  <body>
    <!--Topic built:03/31/2010 01:26:27-->

    
    
    
    
    
    
    
    
    
    <div id="header">
      <table width="100%" id="topTable"><tr>
          <td align="left">
            <span id="headerBold">Usar múltiples conjuntos de resultados</span>
          </td>
          <td align="right">
            
          </td>
        </tr></table>
      
      
      
    </div>
    <div id="mainSection">
      
        
        
    <font color="DarkGray">
      
    </font>
    <p />
    
    <p />
  
        <div id="introductionSection" class="section">
    <p>Cuando se trabaja con procedimientos incluidos o almacenados de SQL o de SQL Server que devuelven más de un conjunto de resultados, el controlador JDBC de Microsoft SQL Server proporciona el método <a href="929a14e2-8e98-4c32-89aa-86733c717ec1.htm">getResultSet</a> en la clase <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> para recuperar todos los conjuntos de resultados devueltos. Además, si ejecuta una instrucción que devuelva más de un conjunto de resultados, puede usar el método <a href="e1367f39-23d7-4e26-b160-6d988d7e6988.htm">execute</a> de la clase <b>SQLServerStatement</b>, porque devolverá un valor <b>boolean</b> que indica que el valor devuelto es un conjunto de resultados o un recuento de actualización. </p>
    <p>Si el método <b>execute</b> devuelve <b>true</b>, la instrucción que se ha ejecutado ha devuelto uno o más conjuntos de resultados. Puede tener acceso al primer conjunto de resultados llamando al método <b>getResultSet</b>. Para determinar si hay más conjuntos de resultados disponibles, puede llamar al método <a href="6b18510a-4d6d-4eeb-a9d0-32e920eb0048.htm">getMoreResults</a>, que devuelve el valor <b>boolean</b> <b>true</b> si hay disponibles más conjuntos de resultados. Si hay disponibles más conjuntos de resultados, puede volver a llamar al método <b>getResultSet</b> para tener acceso a ellos, continuando el proceso hasta haber procesado todos los conjuntos de resultados. Si el método <b>getMoreResults</b> devuelve <b>false</b>, no hay más conjuntos de resultados que procesar.</p>
    <p>Si el método <b>execute</b> devuelve <b>false</b>, la instrucción que se ha ejecutado ha devuelto un valor de recuento de actualización, que puede recuperar llamando al método <a href="e9570228-4500-44b6-b2f1-84ac050b5112.htm">getUpdateCount</a>.</p>
    <div style="margin: .5em 1.5em .5em 1.5em"><b>Nota: </b>
      Para obtener más información sobre recuentos de actualizaciones, vea <a href="64cf4877-5995-4bfc-8865-b7618a5c8d01.htm">Usar un procedimiento almacenado con un recuento de actualizaciones</a>.<p />
    </div>
    <p>En el siguiente ejemplo, se pasa a la función una conexión abierta a la base de datos de ejemplo SQL Server 2005 AdventureWorks y se construye una instrucción SQL que, cuando se ejecuta, devuelve dos conjuntos de resultados:</p>
    <div class="sampleCode"><span codeLanguage="other"><pre>public static void executeStatement(Connection con) {
   try {
      String SQL = "SELECT TOP 10 * FROM Person.Contact; " +
                   "SELECT TOP 20 * FROM Person.Contact";
      Statement stmt = con.createStatement();
      boolean results = stmt.execute(SQL);
      int rsCount = 0;

      //Loop through the available result sets.
     do {
        if(results) {
           ResultSet rs = stmt.getResultSet();
           rsCount++;

           //Show data from the result set.
           System.out.println("RESULT SET #" + rsCount);
           while (rs.next()) {
              System.out.println(rs.getString("LastName") + ", " + rs.getString("FirstName"));
           }
           rs.close();
        }
        System.out.println();
        results = stmt.getMoreResults();
        } while(results);
      stmt.close();
      }
   catch (Exception e) {
      e.printStackTrace();
   }
}
</pre></span></div>
    <p>En este caso, se sabe que el número de conjuntos de resultados que se devuelven es dos. No obstante, el código está escrito de forma que si se devolviera un número desconocido de conjuntos de resultados, como cuando se llama a un procedimiento almacenado, se procesarían todos. Para ver un ejemplo de llamada a un procedimiento almacenado que devuelve múltiples conjuntos de resultados además de valores de actualización, consulte <a href="6b807a45-a8b5-4b1c-8b7b-d8175c710ce0.htm">Controlar instrucciones complejas</a>.</p>
    <div style="margin: .5em 1.5em .5em 1.5em"><b>Nota: </b>
      Cuando hace la llamada al método <b>getMoreResults</b> de la clase <b>SQLServerStatement</b>, se cierra el conjunto de resultados que se había devuelto anteriormente.<p />
    </div>
  </div><span id="seeAlsoSpan"><h1 class="heading">Vea también</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection"><a href="7f8f3e8f-841e-4449-9154-b5366870121f.htm">Usar instrucciones con el controlador JDBC</a><br /><br /></div><!--[if gte IE 5]>
			<tool:tip element="seeAlsoToolTip" avoidmouse="false"/><tool:tip element="languageFilterToolTip" avoidmouse="false"/><tool:tip element="roleInfoSpan" avoidmouse="false"/>
		<![endif]-->
      <div id="footer" class="section">
        
		<hr />
		
		<span id="fb" class="feedbackcss">
			
			
		</span>
		
		<a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">
			
			© 2010 Microsoft Corporation. Reservados todos los derechos.
		</a>
 	
	
      </div>
    </div>
  </body>
</html>