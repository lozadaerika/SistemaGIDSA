<html DIR="LTR" xmlns:tool="http://www.microsoft.com/tooltip" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>Contenedores e interfaces</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/script.js">
      
    </script><script src="../local/script_main.js">&amp;nbsp;</script>
  </head>
  <body>
    <!--Topic built:03/31/2010 01:26:27-->

    
    
    
    
    
    
    
    
    
    <div id="header">
      <table width="100%" id="topTable"><tr>
          <td align="left">
            <span id="headerBold">Contenedores e interfaces</span>
          </td>
          <td align="right">
            
          </td>
        </tr></table>
      
      
      
    </div>
    <div id="mainSection">
      
        
        
    <font color="DarkGray">
      
    </font>
    <p />
    
    <p />
  
        <div id="introductionSection" class="section">
    <p>El controlador JDBC de Microsoft SQL Server es compatible con las interfaces que permiten crear un proxy de una clase y con contenedores que hacen posible el acceso a las extensiones para la API de JDBC que son específicas del controlador JDBC de Microsoft SQL Server mediante una interfaz de proxy.</p>
  </div><h1 class="heading">Controladores</h1><div id="sectionSection0" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      <p xmlns="">El controlador JDBC de SQL Server es compatible con la interfaz java.sql.Wrapper. Esta interfaz proporciona un mecanismo para obtener acceso a las extensiones para la API de JDBC que son específicas del controlador JDBC de SQL Server mediante una interfaz de proxy.</p>
      <p xmlns="">La interfaz java.sql.Wrapper define dos métodos: <b>isWrapperFor</b> y <b>unwrap</b>. El método <b>isWrapperFor</b> comprueba si el objeto de entrada especificado implementa esta interfaz. El método <b>unwrap</b> devuelve un objeto que implementa esta interfaz para permitir el acceso a los métodos específicos del controlador JDBC de SQL Server.</p>
      <p xmlns="">
        Los métodos <b>isWrapperFor</b> y <b>unwrap</b> se exponen de la siguiente forma:</p>
      <ul xmlns=""><li>
          
            <a href="71156863-3588-453e-b5a5-0573b2c1bebf.htm">Método isWrapperFor (SQLServerCallableStatement)</a>
          <br />
        </li><li>
          
            <a href="cbbf2728-b8c8-4c35-875a-6e967c8285dc.htm">Método unwrap (SQLServerCallableStatement)</a>
          <br />
        </li><li>
          
            <a href="09ed10eb-6e46-437b-a7c0-3c55574aad38.htm">Método isWrapperFor (SQLServerConnectionPoolDataSource)</a>
          <br />
        </li><li>
          
            <a href="f5c9b734-2096-4ae4-a284-6b4d1b4a00d4.htm">Método unwrap (SQLServerConnectionPoolDataSource)</a>
          <br />
        </li><li>
          
            <a href="f77af027-c021-4a17-b264-1ee592bfdd84.htm">Método isWrapperFor (SQLServerDataSource)</a>
          <br />
        </li><li>
          
            <a href="eb8abe29-f3ec-4752-a590-1d5dc3e48f08.htm">Método unwrap (SQLServerDataSource)</a>
          <br />
        </li><li>
          
            <a href="b0e591b1-73e2-4f90-967f-5555eadfc3f1.htm">Método isWrapperFor (SQLServerPreparedStatement)</a>
          <br />
        </li><li>
          
            <a href="8e3ec950-3ac1-4c28-9e97-ddce3bd46578.htm">Método unwrap (SQLServerPreparedStatement)</a>
          <br />
        </li><li>
          
            <a href="53f3291f-d43a-476b-a656-d86168dacf6c.htm">Método isWrapperFor (SQLServerStatement)</a>
          <br />
        </li><li>
          
            <a href="ce680176-ef04-4e44-bb6c-ec50bd06e7e6.htm">Método unwrap (SQLServerStatement)</a>
          <br />
        </li><li>
          
            <a href="d612461d-4c3f-46db-b968-ff4c80b2aa7c.htm">Método isWrapperFor (SQLServerXADataSource)</a>
          <br />
        </li><li>
          
            <a href="d97c99b3-2224-4abb-8b32-40aff49fe759.htm">Método unwrap (SQLServerXADataSource)</a>
          <br />
        </li></ul>
    </content></div><h1 class="heading">Interfaces</h1><div id="sectionSection1" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      <p xmlns="">Desde el controlador JDBC 3.0 de SQL Server, las interfaces están disponibles para que un servidor de aplicaciones obtenga acceso a un método específico del controlador desde la clase asociada. El servidor de aplicaciones puede incluir la clase si se crea un proxy, de forma que se exponga la funcionalidad propia del controlador JDBC de SQL Server desde una interfaz. El controlador JDBC de SQL Server es compatible con las interfaces que tengan los métodos y constantes propios del controlador JDBC SQL Server, de forma que un servidor de aplicaciones pueda crear un proxy de la clase.</p>
      <p xmlns="">Las interfaces se derivan de interfaces de Java estándar, por lo que se puede utilizar el mismo objeto una vez se haya desencapsulado para tener acceso a la funcionalidad específica del controlador o a la funcionalidad genérica del controlador JDBC de SQL Server.</p>
      <p xmlns="">Se agregaron las siguientes interfaces:</p>
      <ul xmlns=""><li>
          
            <a href="030a1631-cfcd-41e0-beb5-47f93c01e8e0.htm">ISQLServerCallableStatement</a>
          <br />
        </li><li>
          
            <a href="031c01e2-2c65-4fe4-9700-fdbcc7a39f30.htm">ISQLServerConnection</a>
          <br />
        </li><li>
          
            <a href="ba1d3242-19ca-4321-83fe-867a4f69f1d4.htm">ISQLServerDataSource</a>
          <br />
        </li><li>
          
            <a href="cf87892e-5c34-4ac6-8258-c2a81e117b26.htm">ISQLServerPreparedStatement</a>
          <br />
        </li><li>
          
            <a href="002496f7-8ec0-4267-b4e6-ba095e2ef306.htm">ISQLServerResultSet</a>
          <br />
        </li><li>
          
            <a href="7f83b514-6e76-4f37-baf3-a10db2010e7c.htm">ISQLServerStatement</a>
          <br />
        </li></ul>
    </content></div><h1 class="heading">Ejemplo</h1><div id="sectionSection2" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
    </content><sections xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      <h1 class="heading" xmlns="">Descripción</h1><div id="sectionSection" class="section" xmlns=""><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
          <p xmlns="">Este ejemplo muestra la forma en que se accede a la función específica del controlador JDBC de SQL Server desde un objeto <b>DataSource</b>. Es posible que un servidor de aplicaciones haya encapsulado a esta clase <b>DataSource</b>.  Para obtener acceso a la función o constante específicas del controlador JDBC, puede desencapsular el origen de datos en una interfaz <b>ISQLServerDataSource</b> y utilizar las funciones que se declaran en esta interfaz.</p>
        </content></div>
      <h1 class="heading" xmlns="">Code</h1><div id="sectionSection" class="section" xmlns=""><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
          <div class="sampleCode" xmlns=""><span codeLanguage="other"><pre>import javax.sql.*;
import java.sql.*;
import com.microsoft.sqlserver.jdbc.*;

public class UnWrapTest {
   public static void main(String[] args) {
      // This is a test.  This DataSource object could be something from an appserver 
      // which has wrapped the real SQLServerDataSource with its own wrapper
      SQLServerDataSource ds = new SQLServerDataSource();
      checkSendStringParametersAsUnicode(ds);
   }

   // Unwrap to the ISQLServerDataSource interface to access the getSendStringParametersAsUnicode function
   static void checkSendStringParametersAsUnicode(DataSource ds) {
      try {
         final ISQLServerDataSource sqlServerDataSource = ds.unwrap(ISQLServerDataSource.class);
         boolean sendStringParametersAsUnicode = sqlServerDataSource.getSendStringParametersAsUnicode();

         System.out.println("Send string as parameter value is:-" + sendStringParametersAsUnicode);

      } catch (SQLException sqlE) {
         System.out.println("Exception:-" + sqlE);
      }
   }
}</pre></span></div>
        </content></div>
    </sections></div><span id="seeAlsoSpan"><h1 class="heading">Vea también</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection"><a href="7802328d-4d23-4775-9573-4169b127d258.htm">Describir los tipos de datos del controlador JDBC</a><br /><br /></div><!--[if gte IE 5]>
			<tool:tip element="seeAlsoToolTip" avoidmouse="false"/><tool:tip element="languageFilterToolTip" avoidmouse="false"/><tool:tip element="roleInfoSpan" avoidmouse="false"/>
		<![endif]-->
      <div id="footer" class="section">
        
		<hr />
		
		<span id="fb" class="feedbackcss">
			
			
		</span>
		
		<a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">
			
			© 2010 Microsoft Corporation. Reservados todos los derechos.
		</a>
 	
	
      </div>
    </div>
  </body>
</html>